name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          envs: OPENAI_API_KEY,TELEGRAM_API_ID,TELEGRAM_API_HASH
          script: |
            cd ~
            if [ ! -d telegram_classifier ]; then
              git clone ${{ github.server_url }}/${{ github.repository }}.git telegram_classifier
            fi
            cd telegram_classifier
            git pull origin main
            
            # Create .env file with proper values
            cat > .env << EOL
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            TELEGRAM_API_ID=${{ secrets.TELEGRAM_API_ID }}
            TELEGRAM_API_HASH=${{ secrets.TELEGRAM_API_HASH }}
            EOL
            
            
            # Export environment variables for docker compose
            export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            export TELEGRAM_API_ID=${{ secrets.TELEGRAM_API_ID }}
            export TELEGRAM_API_HASH=${{ secrets.TELEGRAM_API_HASH }}
            
            docker compose down
            docker compose build --no-cache
            docker compose up -d
            
            docker image prune -f
            docker container prune -f
            